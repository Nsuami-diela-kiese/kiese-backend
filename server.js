
const express = require('express');
require('dotenv').config();
const app = express();
const { sendFcm } = require('./utils/fcm'); // ‚¨ÖÔ∏è helper que tu vas cr√©er √† l‚Äô√©tape 4 si pas d√©j√† fait
const db = require('./db');                 // ‚¨ÖÔ∏è ton module DB existant


// ‚úÖ Middleware JSON
app.use(express.json());

// ‚úÖ Middleware de debug pour toutes les requ√™tes
app.use((req, res, next) => {
  console.log("üß™ METHOD:", req.method, "| PATH:", req.path, "| BODY:", req.body);
  next();
});

// üì¶ Routes
const rideRoutes = require('./routes/rides');
app.use('/api/ride', rideRoutes);

const driverRoutes = require('./routes/drivers');
app.use('/api/driver', driverRoutes);

const agentsRoutes = require('./routes/agents');
app.use('/api/agent', agentsRoutes);

const appRoutes = require('./routes/app');     // ‚¨ÖÔ∏è importer
app.use('/api/app', appRoutes);  


// ‚úÖ PORT
const PORT = process.env.PORT || 3000;
console.log("‚úÖ TWILIO_SID:", process.env.TWILIO_SID);
console.log("‚úÖ TWILIO_TOKEN:", process.env.TWILIO_TOKEN);
console.log("‚úÖ TWILIO_PHONE:", process.env.TWILIO_PHONE);


// üîî Test d'envoi FCM √† un chauffeur par son t√©l√©phone
app.get('/api/test/ping_fcm/:phone', async (req, res) => {
  try {
    const { phone } = req.params;

    // R√©cup√©rer le token FCM c√¥t√© DB (table "drivers")
    const r = await db.query('SELECT fcm_token FROM drivers WHERE phone = $1', [phone]);
    const token = r.rows[0]?.fcm_token;

    if (!token) {
      return res.status(404).json({ error: 'Aucun token FCM trouv√© pour ce t√©l√©phone' });
    }

    // Envoyer une notif de test
    await sendFcm(
      token,
      { title: 'Test Kiese', body: 'Hello depuis le backend' },
      { type: 'new_ride', ride_id: '123' } // data pour router c√¥t√© app
    );

    return res.json({ ok: true });
  } catch (e) {
    console.error('ping_fcm error:', e);
    return res.status(500).json({ error: 'send error' });
  }
});



app.listen(PORT, () => {
  console.log(`‚úÖ Serveur d√©marr√© sur le port ${PORT}`);
});




